var posteriors = Infer({model: function(){
  var p = {
    alpha: uniformDrift({a: 0, b: 40, w: 0.01}),
    colorNoiseVal: 1,
    sizeNoiseVal: 1,
    adjCost: uniformDrift({a: 0, b: 2, w: .5/20}),
    nounCost: 0,
  }

var p = extend(p, {colorCost: p.adjCost, sizeCost: p.adjCost})

 mapData({data: df}, function(d){
    var m = extend(model(p), {states : d.states, utterances : d.utterances})
    var altUtilities = _.sum(_.map(function(u) { Math.log(incrementalUtteranceSpeaker(u,"TARGET_REFERENT",m,p,semantics(p))) }, d.utterances))
    var responseUtility = Math.log(incrementalUtteranceSpeaker(d.response,"TARGET_REFERENT",m,p,semantics(p)))
    var score = responseUtility - altUtilities
    factor(score)
  })

  return p
}, method: "MCMC",
samples: NUM_SAMPLES,
lag: LAG, burn: BURN_IN,
verbose: true})

posteriors